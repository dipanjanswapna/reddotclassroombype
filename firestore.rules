
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Helper function to check for Teacher role
    function isTeacher() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Teacher';
    }
    
    // Helper function to check for any authenticated user
    function isSignedIn() {
      return request.auth != null;
    }

    // Publicly readable collections
    match /courses/{courseId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /instructors/{instructorId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /blog_posts/{postId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /organizations/{orgId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /config/homepage {
        allow read: if true;
        allow update: if isAdmin();
    }

    // User-specific data
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      // Allow user creation on signup and updates by user or admin
      // Prevent users from changing their own role or status
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && request.resource.data.role == resource.data.role;
      allow delete: if isAdmin();
    }
    
    match /enrollments/{enrollmentId} {
        allow read, create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow list: if isAdmin() || isTeacher();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    match /support_tickets/{ticketId} {
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow read, update: if isSignedIn() && get(/databases/$(database)/documents/support_tickets/$(ticketId)).data.userId == request.auth.uid || isAdmin();
    }
    
    match /prebookings/{prebookingId} {
        allow read, create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
    
    // Admin-only collections for write access
    match /branches/{branchId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    match /batches/{batchId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /attendance/{recordId} {
        allow read: if isSignedIn();
        allow write: if isAdmin() || isTeacher();
    }

    match /promo_codes/{codeId} {
        allow read: if isSignedIn();
        allow write: if isAdmin() || isTeacher();
    }
  }
}
